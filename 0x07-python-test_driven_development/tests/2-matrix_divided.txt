# 2-matrix_divided.txt

# The ``2-matrix_divided`` module
======================

# Using ``matrix_divided``
-------------------

# Importing the function from the module:
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

# Checking for module docstring:
>>> m = __import__("2-matrix_divided").__doc__
>>> m is not None
True

# Checking for function docstring:
>>> f = __import__("2-matrix_divided").matrix_divided.__doc__
>>> len(f) > 1
True

# Test Case 1: Valid input, positive divisor
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test Case 2: Valid input, negative divisor
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

# Test Case 3: Matrix with all zeros
>>> matrix = [
...     [0, 0, 0],
...     [0, 0, 0]
... ]
>>> matrix_divided(matrix, 2)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

# Test Case 4: Divisor is 0 (ZeroDivisionError)
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

# Test Case 5: Matrix with invalid element (TypeError)
>>> matrix = [
...     [1, 2, "a"],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test Case 6: Rows with different sizes (TypeError)
>>> matrix = [
...     [1, 2, 3],
...     [4, 5]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size
